trigger: 
  branches:
    include:
    - '*'
pool: cholpona

resources:
  repositories: 
  - repository: ag-fraud-advisor
    type: git 
    name: ag-fraud-advisor/ag-fraud-advisor
    ref: refs/heads/Test
stages: 
- stage: pull
  jobs: 
  - job: pull
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - script: |
        git config user.email "$(Build.RequestedForEmail)"
        git config user.name "$(Build.RequestedFor)"
        rm -fr ".git/rebase-merge"
        git fetch --all
        sourceBranch="origin/${BUILD_SOURCEBRANCH/refs\/heads\//}"
        git checkout $sourceBranch
        git pull origin main -X ours
        git add .
        git commit -m "main is pulled"
        git push $sourceBranch
- stage: sw
  jobs:
  - job: sw
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - script: |
        git config user.email "$(Build.RequestedForEmail)"
        git config user.name "$(Build.RequestedFor)"
        echo "SOURCE BRANCH IS $BUILD_SOURCEBRANCH"
        if [ "$BUILD_SOURCEBRANCH" == "refs/heads/main" ]; then
            echo "Building main branch so no merge is needed."
            exit
        fi
        git fetch origin
        sourceBranch="origin/${BUILD_SOURCEBRANCH/refs\/heads\//}"
        echo "GIT CHECKOUT MAIN"
        git checkout main
        echo "GIT STATUS"
        git status
        echo "GIT MERGE"
        git merge "$sourceBranch" -m "Merge to main" -X theirs --allow-unrelated-histories
        echo "GIT STATUS"
        git status
        echo "GIT PUSH"
        git add .
        echo "GIT ADD"
        git commit -m 'merged with $(Build.SourceBranch)'
        echo "GIT COMMIT"
        # git push https://$(System.AccessToken)@
        # B64_PAT=$(printf ":$(System.AccessToken)" | base64)
        # git -c http.extraHeader="Authorization: Basic ${B64_PAT}" push origin main
        git push origin main
        echo "GIT STATUS"
        git status
